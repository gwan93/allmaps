import styled from 'styled-components'
import React, { useRef, useEffect, useState } from "react"
import mapboxgl from "mapbox-gl"
import './MapArea.css';
import ElevationProfile from './ElevationProfile';

// Grab the access token from your Mapbox account// I typically like to store sensitive things like this// in a .env file
mapboxgl.accessToken = process.env.REACT_APP_MAPBOX_TOKEN

const StyledMapArea = styled.div`
  border: 2px solid green;
  height: 80%;
`

const StyledMapAreaContainer = styled.div`
  // border: 2px solid purple;
  flex: 1;
`
const StyleBar = styled.div`
  border: 1px solid black;
  background-color: rgba(255, 255, 255, 0.7);
  color: black;
  padding: 6px 12px;
  z-index: 1;
  position: absolute;
  margin: 12px;
  border-radius: 4px;
`
const ElevationToggle = styled.div`
  border: 2px solid grey;
  background-color: lightgrey;
  display: flex;
  justify-content: center;
`

// The GeoJSON data for the trail
// This data is mocked
// In the future make a call to an API to retrieve this data
const trailData = {
  "type": "Feature",
  "geometry": {
    "type": "MultiLineString",
    "coordinates": [[[-75.51277, 45.39466, 75.0], [-75.51282, 45.39461, 75.0], [-75.51269, 45.39445, 74.0], [-75.51181, 45.39327, 73.0], [-75.51106, 45.3933, 75.0], [-75.51054, 45.39337, 74.0], [-75.51019, 45.39337, 73.0], [-75.50947, 45.39339, 73.0], [-75.50919, 45.3934, 74.0], [-75.50913, 45.39333, 73.0], [-75.5091, 45.39328, 73.0], [-75.50914, 45.39297, 69.0], [-75.50909, 45.39274, 69.0], [-75.50912, 45.39125, 69.0], [-75.50932, 45.39076, 69.0], [-75.51048, 45.39042, 67.0], [-75.51101, 45.39038, 67.0], [-75.51207, 45.39006, 68.0], [-75.51227, 45.39047, 69.0], [-75.51231, 45.39064, 69.0], [-75.51253, 45.39088, 68.0], [-75.5126, 45.39095, 68.0], [-75.51271, 45.39118, 67.0], [-75.51291, 45.39142, 68.0], [-75.5132, 45.39163, 68.0], [-75.51321, 45.39236, 66.0], [-75.51324, 45.39274, 70.0], [-75.51233, 45.39323, 72.0], [-75.51223, 45.39341, 73.0], [-75.51218, 45.39346, 73.0], [-75.51216, 45.39366, 74.0], [-75.51246, 45.39416, 73.0], [-75.51277, 45.39466, 75.0]]],
    "bbox": [-75.50909, 45.39466, -75.51324, 45.39006]
  },
  "properties": {
    "name": "Trail Planner Map",
    "desc": "Generated by AllTrails https://www.alltrails.com/"
  }
}


export default function MapArea() {

  const [ style, setStyle ] = useState("mapbox://styles/mapbox/outdoors-v11" );
  const [ latitude, setLatitude ] = useState(45.393);
  const [ longitude, setLongitude ]= useState(-75.511);
  const [ zoom, setZoom ] = useState(15);
  const [ isShowingElevation ,setIsShowingElevation ] = useState(true);
  const mapContainer = useRef(null)
	const map = useRef(null);
	// this is where all of our map logic is going to live  
	// adding the empty dependency array ensures that the map  
	// is only created once  
	useEffect(() => {    
		// create the map and configure it    
		// check out the API reference for more options    
		map.current = new mapboxgl.Map({      
			container: mapContainer.current,      
			style,      
			center: [longitude, latitude],      
			zoom,    
		})

    map.current.on('load', function() {
      map.current.addSource('trailData', {
        'type': 'geojson',
        'data': trailData
      })
  
      map.current.addLayer({
        'id': 'trailData',
        'type': 'line',
        'source': 'trailData',
        'layout': {},
        'paint': {
          'line-color': '#ec2222',
          'line-width': 2,
          'line-dasharray': [2, 1]
        }
      })
    })

		return () => map.current.remove() 

	}, [style])


  useEffect(() => {
    if (!map.current) return; // wait for map to initialize
    map.current.on('move', () => {
      setLongitude(map.current.getCenter().lng.toFixed(4));
      setLatitude(map.current.getCenter().lat.toFixed(4));
      setZoom(map.current.getZoom().toFixed(2));
    });
  });

  const changeStyle = (styleURL) => {
    setStyle(styleURL);
  }

	return (
    <StyledMapAreaContainer>
      <StyleBar className="mapStyleBar" onChange={e => changeStyle(e.target.value)}>
        <input type="radio" id="streets-v11" value="mapbox://styles/mapbox/streets-v11" name="Style" defaultChecked={style === "mapbox://styles/mapbox/streets-v11"}/>
        <label htmlFor="streets-v11">Streets</label>
        <input type="radio" id="outdoors-v11" value="mapbox://styles/mapbox/outdoors-v11" name="Style" defaultChecked={style === "mapbox://styles/mapbox/outdoors-v11" }/>
        <label htmlFor="outdoors-v11">Outdoors</label>
        <input type="radio" id="light-v10" value="mapbox://styles/mapbox/light-v10" name="Style" defaultChecked={style === "mapbox://styles/mapbox/light-v10"}/>
        <label htmlFor="light-v10">Light</label>
        <input type="radio" id="dark-v10" value="mapbox://styles/mapbox/dark-v10" name="Style" defaultChecked={style === "mapbox://styles/mapbox/dark-v10"}/>
        <label htmlFor="dark-v10">Dark</label>
      </StyleBar>
      <StyledMapArea id="map" 
        ref={mapContainer}
      />

      <ElevationToggle onClick={() => setIsShowingElevation(!isShowingElevation)}>
        {isShowingElevation ? "Hide Elevation Profile" : "Show Elevation Profile"}
      </ElevationToggle>
      {isShowingElevation && <ElevationProfile trailData={trailData}/>}

    </StyledMapAreaContainer>

	)
}